apply plugin: 'application'


def mainClass = "plug.cli.PlugCLI"
def properties = new HashMap()

mainClassName = mainClass

applicationDefaultJvmArgs = ["-XX:+ExitOnOutOfMemoryError"]
properties.each { key, value ->
    applicationDefaultJvmArgs.add("-D${key}=${value}")
}

distributions {
    main {
        baseName = project.name
        version = project.computedVersion
        contents {
            from(project.file("dist")) {
                excludes ["*.pyc"]
                into "."
            }
        }
    }
}

dependencies {
    //UI support
    runtime group: 'fr.ensta-bretagne', name: 'plug-CLI', version: plug.version
    //LTL support
    runtime group: 'fr.ensta-bretagne', name: 'LTL', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-buchi', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-buchikripke', version: plug.version
    //runtimes
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-lexplicit', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'runtime-fiacre', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'runtime-postmortem-obp', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-lspinja', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-composite', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-ltuml', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-remote', version: plug.version
    runtime group: 'fr.ensta-bretagne', name: 'plug-runtime-ltla', version: plug.version
}

bintrayUpload.dependsOn{[build]}
